#include <stdio.h>
#include <stdlib.h>

/*Stelmach Rostislav(xtasy) */

#define MAX 10

int menu(void);
int maxlst();
int minlst();
void display();

struct lista
{
    char name[80];
    char lastname[80];
    unsigned grade;

}lst[MAX];

int top = 0;

int main()
{
    int i;
    FILE *fp;
    char inp[80];
    int point = 0;
    int selection;
    int max,min;

    printf("Grade's List to open: ");
    scanf("%s",inp);
    puts("");

    if((fp = fopen(inp, "rb"))==NULL)
    {
        printf("Cannot open file");
        exit(1);
    }
    else
    {
        printf("List << %s >> loaded successfully.\n", inp);
        puts("");
        point = 1;
    }

        if(fread(lst, sizeof lst, 1, fp) != 1)
        {
            printf("Cannot read file\n");
            exit(1);
        }


    fclose(fp);

    if(point)
    {


        do
        {
        selection = menu();
        switch(selection)
        {
        case 1:
            max = maxlst();
            printf("The Max Grade is: %d %s %s\n",lst[max].grade,lst[max].name,lst[max].lastname);
            puts("");
            break;
        case 2:
            min = minlst();
            printf("The Min Grade is: %d %s %s\n",lst[min].grade,lst[min].name,lst[min].lastname);
            puts("");
            break;
        case 3:
            display();
            break;
        }
    }while(selection!=4);





    return j;
}
}

int menu(void)
{
    int i;

    printf("1. Show the highest grade.\n");
    printf("2. Show the lowest grade.\n");
    printf("3. Display the list.\n");
    printf("4. Quit.\n");

    do
    {
        printf("Select: ");
        scanf("%d", &i);
        printf("\n");
    }while(i < 1 || i > 4);

    return i;
}

void display(void)
{
    int i;

    for(i = 0; i < MAX; i++)
    {
        printf("Name: %s\n", lst[i].name);
        printf("LastName: %s\n", lst[i].lastname);
        printf("Grade: %d\n", lst[i].grade);
        puts("");
    }
}

int minlst(void)
{
    int i;
    int min, temp = 0;

    for(i = 0; i < MAX; i++)
    {
        if(lst[i].grade < min)
        {
            min = lst[i].grade;
            temp = i;
        }
    }

    return (temp);
}

int maxlst(void)
{
    int i;

    int max = 0, temp = 0;

    for(i = 0; i < MAX; i++)
    {
            if(max < lst[i].grade)
            {
                max = lst[i].grade;
                temp = i;
            }
    }

    return (temp);
}
